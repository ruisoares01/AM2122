// Generated by view binder compiler. Do not edit!
package com.example.projetoam2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.projetoam2.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPerfilBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView imgPickImage;

  @NonNull
  public final CircleImageView imgProfile;

  @NonNull
  public final TextView profileCurso;

  @NonNull
  public final TextView profileEmail;

  @NonNull
  public final TextView profileMorada;

  @NonNull
  public final TextView profilenAluno;

  @NonNull
  public final TextView txtProfileName;

  private FragmentPerfilBinding(@NonNull RelativeLayout rootView, @NonNull ImageView imgPickImage,
      @NonNull CircleImageView imgProfile, @NonNull TextView profileCurso,
      @NonNull TextView profileEmail, @NonNull TextView profileMorada,
      @NonNull TextView profilenAluno, @NonNull TextView txtProfileName) {
    this.rootView = rootView;
    this.imgPickImage = imgPickImage;
    this.imgProfile = imgProfile;
    this.profileCurso = profileCurso;
    this.profileEmail = profileEmail;
    this.profileMorada = profileMorada;
    this.profilenAluno = profilenAluno;
    this.txtProfileName = txtProfileName;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPerfilBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPerfilBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_perfil, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPerfilBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgPickImage;
      ImageView imgPickImage = ViewBindings.findChildViewById(rootView, id);
      if (imgPickImage == null) {
        break missingId;
      }

      id = R.id.imgProfile;
      CircleImageView imgProfile = ViewBindings.findChildViewById(rootView, id);
      if (imgProfile == null) {
        break missingId;
      }

      id = R.id.profileCurso;
      TextView profileCurso = ViewBindings.findChildViewById(rootView, id);
      if (profileCurso == null) {
        break missingId;
      }

      id = R.id.profileEmail;
      TextView profileEmail = ViewBindings.findChildViewById(rootView, id);
      if (profileEmail == null) {
        break missingId;
      }

      id = R.id.profileMorada;
      TextView profileMorada = ViewBindings.findChildViewById(rootView, id);
      if (profileMorada == null) {
        break missingId;
      }

      id = R.id.profilenAluno;
      TextView profilenAluno = ViewBindings.findChildViewById(rootView, id);
      if (profilenAluno == null) {
        break missingId;
      }

      id = R.id.txtProfileName;
      TextView txtProfileName = ViewBindings.findChildViewById(rootView, id);
      if (txtProfileName == null) {
        break missingId;
      }

      return new FragmentPerfilBinding((RelativeLayout) rootView, imgPickImage, imgProfile,
          profileCurso, profileEmail, profileMorada, profilenAluno, txtProfileName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
