// Generated by view binder compiler. Do not edit!
package com.example.projetoam2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.projetoam2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowCalendarioBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout ConstraintLayoutListRowCalendario;

  @NonNull
  public final Button buttonExpand;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final TextView dateEventList;

  @NonNull
  public final TextView descEventList;

  @NonNull
  public final TextView descTitulo;

  @NonNull
  public final ConstraintLayout expandableView;

  @NonNull
  public final TextView titleEventList;

  private RowCalendarioBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout ConstraintLayoutListRowCalendario, @NonNull Button buttonExpand,
      @NonNull CardView cardView, @NonNull TextView dateEventList, @NonNull TextView descEventList,
      @NonNull TextView descTitulo, @NonNull ConstraintLayout expandableView,
      @NonNull TextView titleEventList) {
    this.rootView = rootView;
    this.ConstraintLayoutListRowCalendario = ConstraintLayoutListRowCalendario;
    this.buttonExpand = buttonExpand;
    this.cardView = cardView;
    this.dateEventList = dateEventList;
    this.descEventList = descEventList;
    this.descTitulo = descTitulo;
    this.expandableView = expandableView;
    this.titleEventList = titleEventList;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowCalendarioBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowCalendarioBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_calendario, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowCalendarioBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout ConstraintLayoutListRowCalendario = (ConstraintLayout) rootView;

      id = R.id.buttonExpand;
      Button buttonExpand = ViewBindings.findChildViewById(rootView, id);
      if (buttonExpand == null) {
        break missingId;
      }

      id = R.id.card_view;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.dateEventList;
      TextView dateEventList = ViewBindings.findChildViewById(rootView, id);
      if (dateEventList == null) {
        break missingId;
      }

      id = R.id.descEventList;
      TextView descEventList = ViewBindings.findChildViewById(rootView, id);
      if (descEventList == null) {
        break missingId;
      }

      id = R.id.descTitulo;
      TextView descTitulo = ViewBindings.findChildViewById(rootView, id);
      if (descTitulo == null) {
        break missingId;
      }

      id = R.id.expandableView;
      ConstraintLayout expandableView = ViewBindings.findChildViewById(rootView, id);
      if (expandableView == null) {
        break missingId;
      }

      id = R.id.titleEventList;
      TextView titleEventList = ViewBindings.findChildViewById(rootView, id);
      if (titleEventList == null) {
        break missingId;
      }

      return new RowCalendarioBinding((ConstraintLayout) rootView,
          ConstraintLayoutListRowCalendario, buttonExpand, cardView, dateEventList, descEventList,
          descTitulo, expandableView, titleEventList);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
